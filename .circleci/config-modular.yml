version: 2.1

executors:
  docker-executor:
    docker:
      - image: cimg/base:stable

jobs:
  # ============ Build Job ============
  Build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      # Build Docker Image
      - run:
          name: Build Docker Image
          command: |
            echo "ðŸš€ Building Docker image..."
            docker build -t yotta-dashboard:latest -f dockerfile .
            echo "âœ… Docker image built successfully."
            docker images -a

  # Testing job runs after Build job
  Testing:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      # Run Docker Compose
      - run:
          name: Run Docker Compose
          command: |
            echo "ðŸš€ Starting services with Docker Compose..."
            docker-compose -f docker-compose.yml up -d --build
            echo "âœ… Services started successfully."
            docker ps -a

      # Wait for Yotta-MySQL to be ready
      - run:
          name: Wait for Services to be Ready
          command: |
            echo "Waiting for Database to be ready..."
            for i in {1..20}; do
              docker exec yotta-mysql sh -c 'mysql -u yotta -pyotta_pass -e "SELECT 1;"' && break
              echo "MySQL not ready yet..."
              sleep 2
            done
            echo "âœ… Yotta-MySQL is ready!"

      # Generate & Inject APP_KEY
      - run:
          name: Generate & Inject APP_KEY
          command: bash commands/create-key.yml
        
      # Optimize Laravel
      - run:
          name: Optimize Laravel
          command: bash commands/laravel-optimize.yml

      # Run Migrations
      - run:
          name: Run Laravel Migrations
          command: bash commands/laravel-migrate.yml

      # Health Check Laravel
      - run:
          name: Laravel Health Check
          command: bash commands/health-check.yml

  Push-To-Docker:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: DockerHub Login & Push
          command: bash commands/push-to-docker.yml

  # Job to deploy to staging server
  Deploy-Staging:
    executor: docker-executor
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Deploy to Staging
          command: bash commands/deploy-staging.yml

  Deploy-Production:
    executor: docker-executor
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: Deploy to Production
          command: bash commands/deploy-prod.yml

workflows:
  version: 2
  ci-cd:
    jobs:
      - Build
      - Testing:
          requires:
            - Build
      - Push-To-Docker:
          requires:
            - Testing
          filters:
            branches:
              only: ci-cd/test
            tags:
              only: /^v.*/
      - Deploy-Staging:
          requires:
            - Testing
            - Push-To-Docker
          filters:
            branches:
              only: ci-cd/test
      - Deploy-Production:
          requires:
            - Push-To-Docker
          filters:
            branches:
              only: ci-cd/test
            tags:
              only: /^v.*/